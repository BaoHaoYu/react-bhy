{"version":3,"file":"main.5cade376979933a5f3d7.bundle.js","sources":["webpack:///./packages/table-layout/src/lib/layout-horizontal.tsx"],"sourcesContent":["import classnames from 'classnames'\r\nimport * as React from 'react'\r\nimport { ITableLayoutYProps } from '../index.interface'\r\nimport { IColTdProps } from './col-td'\r\n\r\n/**\r\n * 水平布局\r\n */\r\nexport const TableLayoutHorizontal: React.StatelessComponent<\r\n  ITableLayoutYProps\r\n> = (props) => {\r\n  let rootStyle: React.CSSProperties = {}\r\n  if (props.fullParent) {\r\n    rootStyle = { height: '100%' }\r\n  }\r\n  const childrenList = React.Children.toArray(props.children).filter(\r\n    (item: React.ReactElement<IColTdProps>, index: number) =>\r\n      !item.props.hidden,\r\n  )\r\n\r\n  const children = childrenList.map(\r\n    (item: React.ReactElement<IColTdProps>, index: number) => {\r\n      let spaceLeft: number | undefined\r\n      let spaceRight: number | undefined\r\n      if (props.space !== undefined) {\r\n        spaceLeft = props.space / 2\r\n        spaceRight = props.space / 2\r\n        // 只有一个元素，没有任何边距\r\n        if (childrenList.length === 1) {\r\n          spaceLeft = undefined\r\n          spaceRight = undefined\r\n        }\r\n        // 第一个只有边距\r\n        if (index === 0) {\r\n          spaceLeft = undefined\r\n        }\r\n        // 最后一个只有上边距\r\n        if (index === childrenList.length - 1) {\r\n          spaceRight = undefined\r\n        }\r\n      }\r\n      return React.cloneElement(item, {\r\n        ...item.props,\r\n        spaceLeft,\r\n        spaceRight,\r\n        key: index,\r\n      })\r\n    },\r\n  )\r\n  return (\r\n    <div\r\n      className={classnames(props.className)}\r\n      style={{ ...props.style, ...rootStyle }}>\r\n      <div\r\n        style={{\r\n          display: 'table',\r\n          tableLayout: 'fixed',\r\n          height: '100%',\r\n          width: '100%',\r\n        }}>\r\n        <div style={{ display: 'table-row' }}>{children}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"AAQA","sourceRoot":""}